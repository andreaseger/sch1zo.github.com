<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: speed | meh...]]></title>
  <link href="http://sch1zo.github.com/blog/categories/speed/atom.xml" rel="self"/>
  <link href="http://sch1zo.github.com/"/>
  <updated>2012-01-02T07:09:16+01:00</updated>
  <id>http://sch1zo.github.com/</id>
  <author>
    <name><![CDATA[Andreas Eger]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[damn is ruby slow - at least compared to c++]]></title>
    <link href="http://sch1zo.github.com/blog/2011/04/16/damn-is-ruby-slow---at-least-compared-to-c/"/>
    <updated>2011-04-16T00:00:00+02:00</updated>
    <id>http://sch1zo.github.com/blog/2011/04/16/damn-is-ruby-slow---at-least-compared-to-c</id>
    <content type="html"><![CDATA[<p>ok thats nothing new, yet the difference was a little bit surprising.</p>

<p>In an earlier post I described the <em>puzzleSolver</em> project and before starting
to implement parts of it in c++ I build a Ruby prototype. The prototype
generated 1000 random puzzle pieces and later generated a quality between
every 4000 puzzle edges, thats about 8.000.000 calculations. The Ruby
Prototype needs <strong>3 minutes</strong> to finish that calculation.</p>

<!-- more -->


<p>The c++ version does exactly the same, it has the same structure and
algorithm. Now the calculations are done in <strong>under 1 second</strong> for 1000
pieces.</p>

<p>As I sad, its not surprising that the c++ version is way faster than the Ruby
prototype. But a difference of <strong>200 times faster</strong> was surprising.</p>

<p>But I don't want to make Ruby bad, I love Ruby, without the prototype it would
have been way more difficult to build the c++ version. And of cause the time
building the two versions where different, the Ruby prototype was working
within a few hours, plus another few to optimize the algorithm. The c++
version toke a few days till it was working like the prototype, but that might
also had to do that my last c++ encounter was like two years ago. But even so
I just had to re implement the existing algorithm. Without that it would have
taken even longer.</p>
]]></content>
  </entry>
  
</feed>
